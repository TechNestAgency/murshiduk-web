@model MurshadikCP.Controllers.ParentMessagesTemplates

<!-- Sweet Alert-->
<link href="~/assets/libs/sweetalert2/sweetalert2.min.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "قوالب الرسائل";
    ViewBag.pTitle = "قوالب الرسائل";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-lg-5">
        <div class="card">
            <div class="card-body">
                @using (Html.BeginForm(Model.messagesTemplate.id == 0 ? "Create" : "Edit", "MessagesTemplates", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
                {
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" value="@Model.messagesTemplate.id" />
                    <div class="form-horizontal">
                        <div class="form-group">
                            @Html.LabelFor(model => model.messagesTemplate.title, "عنوان", htmlAttributes: new { @class = "col control-label" })
                            <div class="col">
                                @Html.EditorFor(model => model.messagesTemplate.title, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                @Html.ValidationMessageFor(model => model.messagesTemplate.title, "مطلوب عنوان", new { @class = "invalid-feedback" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.messagesTemplate.body, "الجسم", htmlAttributes: new { @class = "col control-label" })
                            <div class="col">
                                @Html.EditorFor(model => model.messagesTemplate.body, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                @Html.ValidationMessageFor(model => model.messagesTemplate.body, "الجسم مطلوب", new { @class = "invalid-feedback" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.messagesTemplate.notification_id, "نوع إعلام", htmlAttributes: new { @class = "col control-label" })
                            <div class="col">
                                @Html.DropDownList("notification_id", null, null, htmlAttributes: new { @class = "form-control h-auto" })
                            </div>
                        </div>

                        <div class="form-group row">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="حفظ" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>
                }

            </div>
        </div>
    </div>
    <div class="col-lg-7">
        <div class="card">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped">
                        <tr>
                            <th>
                                عنوان
                            </th>
                            <th>
                                الجسم
                            </th>
                            <th>نوع إعلام</th>
                            <th></th>
                        </tr>
                        @foreach (var item in Model.messageList)
                        {
                            <tr>
                                <td class="align-middle">
                                    @Html.DisplayFor(modelItem => item.title)
                                </td>
                                <td class="align-middle">
                                    @Html.DisplayFor(modelItem => item.body)
                                </td>
                                <td class="align-middle">
                                    @Html.DisplayFor(modelItem => item.Messages_Templates_Notification.name)
                                </td>
                                <td>
                                    <a href="/MessagesTemplates/Index?Id=@item.id" class="btn btn-lg btn-link" data-toggle="tooltip" data-placement="top" title="تعديل"><i class="mdi mdi-circle-edit-outline"></i></a>

                                    <input type="hidden" id="ids" value="@item.id" />
                                    <a class="btn btn-lg btn-link waves-effect waves-light sa-warning" data-toggle="tooltip" data-placement="top" title="حذف"><i class="mdi mdi-trash-can"></i></a>
                                </td>
                            </tr>
                        }
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>


@section scripts{

    <script src="~/assets/libs/parsleyjs/parsley.min.js"></script>

    <script src="~/assets/js/pages/form-validation.init.js"></script>

    <script src="~/assets/libs/sweetalert2/sweetalert2.min.js"></script>

    <script src="~/assets/js/app.js"></script>
}

<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<script src="~/assets/libs/jquery/jquery.min.js"></script>
<script type="text/javascript">


    $(document).ready(function () {
        var successMessage = '@TempData["SuccessMessage"]'
        if (successMessage != null && successMessage != '') {
            Swal.fire({ position: "top-end", type: "success", title: "@TempData["SuccessMessage"]", showConfirmButton: !1, timer: 1500 });
        }
        $(".sa-warning").click(function (e) {
            var row = $(this).closest('tr');
            var id = $(this).siblings('input#ids').val();
            Swal.fire({
                title: 'هل أنت واثق ؟',
                text: "لن تتمكن من التراجع عن هذا!",
                type: "warning",
                confirmButtonText: 'نعم',
                cancelButtonText: 'لا',
                confirmButtonColor: "#34c38f",
                cancelButtonColor: "#f46a6a",
                showCancelButton: true,
                showCloseButton: true
            }).then(function (t) {
                if (t.value) {
                    axios.post('/MessagesTemplates/Delete', { 'id': id })
                        .then(function (r) {
                            if (r.data == "Success") {
                                Swal.fire("تم الحذف!", "تم حذف ملفك.", "success")
                                row.remove();
                                location.reload();
                            } else {
                                swal.fire(r.data, "Something wrong!", "error")
                            }
                        })
                        .catch(function (error) {
                            swal.fire("Error", error, "error")
                        });
                }
            });
        });
    });

</script>